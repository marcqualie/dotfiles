#!/usr/bin/env zsh

out() {
  LINE=$(echo "$1" | sed "s#$HOME#~#g")
  LINE=$1
  COLOR="37"
  PREFIX="--> "
  if [ "$2" != "" ]; then COLOR="$2"; fi
  if [ "$3" != "" ]; then PREFIX="$3"; fi
  printf "\033[1m\033[${COLOR}m${PREFIX}${LINE}\033[0m\n"
}

run() {
  PREFIX="  $ "
  COMMAND=$1
  out "$COMMAND" "33" "$PREFIX"
  OUTPUT=$(zsh -c "$COMMAND 2>&1")
  STATUS="$?"
  printf "\033[1A\r\033[K"
  if [ "$STATUS" -eq "0" ]; then
    out "$COMMAND" "32" "$PREFIX"
  else
    out "$COMMAND" "31" "$PREFIX"
  fi
  if [ "$OUTPUT" != "" ]; then
    while read LINE; do
      printf "    $LINE\n"
    done <<< $OUTPUT
  fi
}

symlink() {
  POINTING_TO=$(readlink -- "$2")
  if [[ -e "$2" || "$POINTING_TO" != "" ]]; then
    if [ "$POINTING_TO" != "$1" ]; then
      out "ln -s ${1/ /\\ } ${2/ /\\ }" "31" "  $ "
      if [ "$POINTING_TO" = "" ]; then
        out "is already a hard file" "31" "    "
      else
        out "is pointing to $POINTING_TO" "31" "    "
      fi
    else
      out "ln -s ${1/ /\\ } ${2/ /\\ } \033[32m(already exists)" "37" "  $ "
    fi
  else
    run "ln -s ${1/ /\\ } ${2/ /\\ }"
  fi
}

symlink_dotfile() {
  DOTFILE=".$1"
  SYMLINK_AS=~/$DOTFILE
  if [ "$2" != "" ]; then SYMLINK_AS=$2; fi
  [[ -d $(dirname $SYMLINK_AS) ]] || mkdir -p $(dirname $SYMLINK_AS)
  #out "symlink_dotfile $1"
  symlink "$DOTFILES_DIR/$DOTFILE" "$SYMLINK_AS"
}

symlink_dotfile_force() {
  DOTFILE=".$1"
  SYMLINK_AS=~/$DOTFILE
  if [ "$2" != "" ]; then SYMLINK_AS=$2; fi
  [[ -d $(dirname $SYMLINK_AS) ]] || mkdir -p $(dirname $SYMLINK_AS)
  run "ln -f -s ${DOTFILES_DIR/ /\\ }/${DOTFILE/ /\\ } ${SYMLINK_AS/ /\\ }"
}
